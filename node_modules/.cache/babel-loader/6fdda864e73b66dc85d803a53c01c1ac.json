{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/NewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPostForm = props => {\n  _s();\n\n  const token = props.token;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  const [message, setMessage] = useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      APIFetch({\n        url: \"posts/\",\n        method: \"POST\",\n        token: token,\n        body: {\n          post: {\n            title: title,\n            description: description,\n            price: price,\n            location: location,\n            willDeliver: willDeliver\n          }\n        }\n      }).then(response => {\n        if (response.success) {\n          setToken(response.data.token);\n          setMessage(response.data.message);\n          setUser(username);\n        } else {\n          setMessage(response.error.message);\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: type.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: event => {\n        setTitle(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: event => {\n        setDescription(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Price\",\n      value: price,\n      onChange: event => {\n        setPrice(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: location,\n      onChange: event => {\n        setLocation(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: willDeliver,\n      onChange: () => {\n        setWillDeliver(!willDeliver);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Will Deliver.\",\n      children: \"Will Deliver.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !title || !description || price,\n      children: Submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewPostForm, \"jCkrWCNo4agXwJbTcUcG4mAuAx8=\");\n\n_c = NewPostForm;\nexport default NewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/NewPostForm.js"],"names":["React","useState","APIFetch","NewPostForm","props","token","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","message","setMessage","event","preventDefault","url","method","body","post","then","response","success","setToken","data","setUser","username","error","type","toUpperCase","target","value","Submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst NewPostForm =(props)=>\n{\n    const token=props.token;\n\n    const [title,setTitle]=useState(\"\");\n    const [description,setDescription]=useState(\"\");\n    const [price,setPrice]=useState(\"\");\n    const [location,setLocation]=useState(\"\");\n    const [willDeliver,setWillDeliver]=useState(false);\n    const [message,setMessage]=useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n    \n\n\n    return <form onSubmit={(event)=>\n    {\n        event.preventDefault();\n        APIFetch(\n            {\n                url:\"posts/\",\n                method:\"POST\",\n                token:token,\n                body:\n                {\n                    post:\n                    {\n                        title:title,\n                        description:description,\n                        price:price,\n                        location:location,\n                        willDeliver:willDeliver\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            if(response.success)\n            {\n                setToken(response.data.token);\n                setMessage(response.data.message);\n                setUser(username);\n            }\n            else\n            {\n                setMessage(response.error.message)\n            }\n        })\n        \n    }}>\n        <h2>{type.toUpperCase()}</h2>\n        <input required type=\"text\" placeholder=\"Title\" value={title} onChange={(event)=>\n        {\n            setTitle(event.target.value);\n        }}/>\n        <input required type=\"text\" placeholder=\"Description\" value={description} onChange={(event)=>\n        {\n            setDescription(event.target.value);\n        }}/>\n        <input required type=\"text\" placeholder=\"Price\" value={price} onChange={(event)=>\n        {\n            setPrice(event.target.value);\n        }}/>\n        <input type=\"text\" placeholder=\"Location\" value={location} onChange={(event)=>\n        {\n            setLocation(event.target.value);\n        }}/>\n        <input type=\"checkbox\" checked={willDeliver}  onChange={()=>\n        {\n            setWillDeliver(!willDeliver);\n        }}/>\n        <label htmlFor=\"Will Deliver.\">Will Deliver.</label>\n    \n        \n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!title||!description||price}>{Submit}</button>\n    </form>\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}
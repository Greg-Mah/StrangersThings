{"version":3,"sources":["api.js","PostForm.js","Message.js","MessageForm.js","Post.js","Posts.js","UserForm.js","Account.js","NavBar.js","Home.js","Profile.js","404.js","index.js"],"names":["APIFetch","a","url","method","token","body","fetch","toUpperCase","headers","JSON","stringify","response","json","PostForm","props","fetchPosts","setShowCreatePost","post","useState","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","message","setMessage","className","onSubmit","event","preventDefault","_id","then","success","data","error","required","type","placeholder","value","onChange","target","checked","htmlFor","disabled","Message","fromUser","username","content","MessageForm","setContent","note","setNote","id","console","log","Post","showMessages","setShowMessages","showEdit","setShowEdit","author","createdAt","updatedAt","messages","length","isAuthor","onClick","Promise","all","map","Posts","posts","setPosts","search","setSearch","matchPosts","setMatchPosts","showCreatePost","useEffect","filter","includes","UserForm","setToken","setUser","setUsername","password","setPassword","confirmPassword","setConfirmPassword","hidden","setHidden","output","i","charAt","user","to","Account","useParams","NavBar","Home","Profile","myMessages","setMyMessages","myPosts","setMyPosts","myMessage","idx","myPost","active","C404","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2776576f.chunk.js","sourcesContent":["const API_URL=\"https://strangers-things.herokuapp.com/api/2105-SJS-RM-WEB-PT/\"\n\n\nconst APIFetch = async (\n    {\n        url:url,\n        method:method,\n        token:token,\n        body:body\n    })=>\n{\n    try\n    {\n        const response = await fetch(API_URL+url,\n        {\n            method:method ? method.toUpperCase():\"GET\",\n            headers:\n            {\n                    'Content-Type':'application/json',\n                    ...(token && {'Authorization':'Bearer '+token}),\n            },\n            body:JSON.stringify(body)\n        });\n        return await response.json();\n\n    }\n    catch(error)\n    {\n        throw error;\n    }\n}\n\nexport default APIFetch;","import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst PostForm =(props)=>\n{\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n    const setShowCreatePost=props.setShowCreatePost;\n    const post=props.post;\n\n    const [title,setTitle]=useState(post ? post.title:\"\");\n    const [description,setDescription]=useState(post ? post.description:\"\");\n    const [price,setPrice]=useState(post ? post.price:\"\");\n    const [location,setLocation]=useState(post ? post.location:\"\");\n    const [willDeliver,setWillDeliver]=useState(post ? post.willDeliver:false);\n    const [message,setMessage]=useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n    \n    return <form className=\"PostForm\" onSubmit={(event)=>\n    {\n        event.preventDefault();\n\n        APIFetch(\n            {\n                url:\"posts/\"+(post ? post._id:\"\"),\n                method:post ? \"PATCH\":\"POST\",\n                token:token,\n                body:\n                {\n                    post:\n                    {\n                        title:title,\n                        description:description,\n                        price:price,\n                        location:location ? location:\"[On Request]\",\n                        willDeliver:willDeliver\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            if(response.success)\n            {\n                setMessage(response.data.message);\n                fetchPosts();\n                if(!post)\n                {\n                    setShowCreatePost();\n                }\n            }\n            else\n            {\n                setMessage(response.error.message);\n            }\n        })\n        \n    }}>\n        <h2>Post Form:</h2>\n        <input required type=\"text\" placeholder=\"Title\" value={title} onChange={(event)=>\n        {\n            setTitle(event.target.value);\n        }}/>\n        <br />\n        <input required type=\"text\" placeholder=\"Description\" value={description} onChange={(event)=>\n        {\n            setDescription(event.target.value);\n        }}/>\n        <br />\n        <input required type=\"text\" placeholder=\"Price\" value={price} onChange={(event)=>\n        {\n            setPrice(event.target.value);\n        }}/>\n        <br />\n        <input type=\"text\" placeholder=\"Location\" value={location} onChange={(event)=>\n        {\n            setLocation(event.target.value);\n        }}/>\n        <br />\n        <div>\n            <input type=\"checkbox\" checked={willDeliver}  onChange={()=>\n            {\n                setWillDeliver(!willDeliver);\n            }}/>\n            <label htmlFor=\"Will Deliver.\">Will Deliver.</label>\n            </div>\n\n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!title||!description||!price}>Submit</button>\n    </form>\n}\n\nexport default PostForm;","import React from 'react';\n\n\nconst Message=(props)=>\n{\n    const message=props.message;\n    return <>\n        {message.fromUser ? <p className =\"Message\">{message.fromUser.username}:{message.content} </p> : null}\n    </>;\n}\n\nexport default Message;","import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst MessageForm=(props)=>\n{\n    const [content,setContent]=useState(\"\");\n    const [note,setNote]=useState(\"Enter your message above\");\n    const id=props.id\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n\n\n\n    return<form className=\"MessageForm\" onSubmit={(event)=>\n        {\n            event.preventDefault();\n    \n            APIFetch(\n                {\n                    url:\"posts/\"+id+\"/messages/\",\n                    method:\"POST\",\n                    token:token,\n                    body:\n                    {\n                        message:\n                        {\n                            content:content\n                        }\n                    }\n                }\n            )\n            .then((response)=>\n            {\n                if(response.success)\n                {\n                    console.log(response);\n                    fetchPosts();\n                }\n                else\n                {\n                    setNote(response.error.message);\n                }\n            })\n            \n        }}> \n        <input type=\"text\" placeholder=\"Type your message here\" value={content} onChange={(event)=>\n        {\n            setContent(event.target.value);\n        }}/>\n        <br />\n        <p>{note}</p>\n        <button type=\"submit\" disabled={!content}>Submit</button>\n    </form>;\n}\n\nexport default MessageForm;","import React, { useState } from 'react';\nimport APIFetch from './api';\nimport Message from './Message';\nimport MessageForm from './MessageForm';\nimport PostForm from './PostForm';\n\n\n\n\nconst Post=(props)=>\n{\n    const post=props.post;\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n\n    const [showMessages,setShowMessages]=useState(false);\n    const [showEdit,setShowEdit]=useState(false)\n\n\n    const deletePost=()=>\n    {\n\n        Promise.all([APIFetch(\n        {\n            url:\"posts/\"+post._id+\"/\",\n            method:\"DELETE\",\n            token:token,\n        })])\n        .then(()=>\n        {\n            fetchPosts();\n        });\n    }\n\n    return <div className=\"Post\">\n        {(post.title ? <h2>{post.title}</h2> : null)}\n        {(post.author.username ? <p>Seller: {post.author.username}</p> : null)}\n        {(post.description ? <p>{post.description}</p> : null)}\n        {(post.price ? <p>Price: {post.price}</p> : null)}\n        {(post.location ? <p>Location: {post.location}</p> : <p>Location: [On Request]</p>)}\n        <p>Will Deliver: {post.willDeliver ? \"Yes\":\"No\"}</p>\n        {(post.createdAt ? <p>Created: {post.createdAt}</p> : null)}\n        {(post.updatedAt ? <p>Last updated: {post.updatedAt}</p> : null)}\n        {(post.messages.length!==0 ? <p>Messages: {post.messages.length}</p> : null)}\n        {post.isAuthor ? <>\n            <button onClick={()=>\n            {\n                setShowEdit(!showEdit);\n            }}>Edit</button>\n            {showEdit ? <PostForm token={token} fetchPosts={fetchPosts} post={post}/>:null}        \n            <button onClick={()=>\n            {\n                deletePost();\n            }}>Delete</button>\n            <button onClick={()=>\n            {\n                setShowMessages(!showMessages);\n            }}>Show Post Messages</button>\n            </>:null\n        }\n        {!post.isAuthor&&token ? \n            <button onClick={()=>\n            {\n                setShowMessages(!showMessages);\n            }}>Send a message</button>\n            :null}\n        {showMessages ? (post.isAuthor ? post.messages.map((message)=>\n            {\n                return <Message key={message._id} message={message}/>;\n            })\n            : <MessageForm token={token} id={post._id} fetchPosts={fetchPosts}/>)\n        : null}\n\n        \n\n    </div>;\n}\n\nexport default Post;","import React, {useEffect, useState} from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\nimport Post from './Post';\n\n\nconst Posts=(props)=>\n{\n    const [posts,setPosts]=useState([]);\n    const [search,setSearch]=useState(\"\");\n    const [matchPosts,setMatchPosts]=useState(posts);   \n    const token=props.token;\n    const [showCreatePost, setShowCreatePost]=useState(false);\n\n    const fetchPosts=()=>\n    {\n        Promise.all([APIFetch(\n        {\n            url:\"posts/\",\n            token:token\n        }\n        )])\n        .then(([response])=>\n        {\n            setPosts(response.data.posts);\n        });\n    }\n\n    useEffect(()=>\n    {\n        fetchPosts();\n    },[]);\n\n    useEffect(()=>\n    {\n        setMatchPosts(posts.filter((post)=>\n        {\n            return post.title.includes(search)||\n            post.description.includes(search)||\n            post.author.username.includes(search)||\n            post.price.includes(search)||\n            post.location.includes(search);\n        }));\n    },[search,posts]);\n\n    return <>\n    <input  type=\"text\" placeholder=\"Search Posts\" value={search} onChange={(event)=>\n    {\n        setSearch(event.target.value);\n    }}/>\n    {token ? <h2 onClick={()=>{setShowCreatePost(!showCreatePost)}}>Show/Hide Post form</h2> : null}\n    {showCreatePost ? <PostForm token={token} fetchPosts={fetchPosts} setShowCreatePost={setShowCreatePost}/>:null}\n    <div>\n        {matchPosts.map((post)=>\n        {\n            return <Post key={post._id} post={post} fetchPosts={fetchPosts} token={token}/>\n        })}\n    </div>\n    </>;\n}\n\nexport default Posts;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport APIFetch from './api';\n\n\nconst UserForm =(props)=>\n{\n    const setToken=props.setToken;\n    const setUser=props.setUser;\n    const type=props.type;\n\n    \n    const [username,setUsername]=useState(\"\");\n    const [password,setPassword]=useState(\"\");\n    const [confirmPassword,setConfirmPassword]=useState(\"\");\n    const [message,setMessage]=useState(\"Enter username and password to \"+type+\".\");\n    const [hidden,setHidden]=useState(true);\n    \n    useEffect(()=>\n    {\n        if(confirmPassword)\n        {\n            if(confirmPassword!==password)\n            {\n                let output=\"Password match o=matching character, x=wrong character, _=missing character, *=extra character:\";\n                for(let i=0;i<password.length||i<confirmPassword.length;i++)\n                {\n                    if(i<password.length)\n                    {\n                        if(i<confirmPassword.length)\n                        {\n                            if(password.charAt(i)===confirmPassword.charAt(i))\n                            {\n                                output+=\"o\";\n                            }\n                            else\n                            {\n                                output+=\"x\";\n                            }\n                        }\n                        else\n                        {\n                            output+=\"_\";\n                        }\n                    }\n                    else\n                    {\n                        output+=\"*\";\n                    }\n                }\n                setMessage(output);\n            }\n            else\n            {\n                setMessage(\"Passwords match!\")\n            }\n        }\n        else\n        {\n            setMessage(\"Enter username and password to \"+type+\".\");\n        }\n    },[confirmPassword])\n\n\n    return <form onSubmit={(event)=>\n    {\n        event.preventDefault();\n        APIFetch(\n            {\n                url:\"users/\"+type,\n                method:\"POST\",\n                body:\n                {\n                    user:\n                    {\n                        username:username,\n                        password:password\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            if(response.success)\n            {\n                setToken(response.data.token);\n                setMessage(response.data.message);\n                setUser(username);\n            }\n            else\n            {\n                setMessage(response.error.message);\n            }\n        })\n        \n    }}>\n        <h2><Link to={\"/account/\"+type+\"/\"}>{type.toUpperCase()}</Link></h2>\n        <input required type=\"text\" placeholder=\"Username\" value={username} onChange={(event)=>\n        {\n            setUsername(event.target.value);\n        }}/>\n        <input required type={hidden ? \"password\": \"text\"} placeholder=\"Password\" value={password} onChange={(event)=>\n        {\n            setPassword(event.target.value);\n        }}/>\n        <div>\n            <input type=\"checkbox\" checked={hidden} value={hidden}  onChange={()=>\n            {\n                setHidden(!hidden);\n            }}/>\n            <label htmlFor=\"Hide Password\">Hide Password</label>\n        </div>\n        {type===\"register\" ?\n        <input required type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(event)=>\n        {\n            setConfirmPassword(event.target.value);\n        }}/>\n        \n        :null}\n        \n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!username||!password||(type===\"register\"&&password!==confirmPassword)}>{type}</button>\n    </form>\n}\n\nexport default UserForm;\n","import React from \"react\";\nimport UserForm from './UserForm';\nimport { useParams } from 'react-router';\n const Account=(props)=>\n{\n    const setToken=props.setToken;\n    const setUser=props.setUser;\n    const params=useParams();\n    const type=params[0];\n    \n    return <>\n    {type !== \"register/\" ? <UserForm setToken={setToken} setUser={setUser} type=\"login\"></UserForm> : null}\n    {type !== \"login/\" ? <UserForm setToken={setToken} setUser={setUser} type=\"register\"></UserForm> : null}\n    </>\n}\n\nexport default Account;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = (props)=>\n{\n    const user=props.user;\n    const setToken=props.setToken;\n    const setUser=props.setUser;\n\n    return <h2 className=\"NavBar\">\n        <NavLink to=\"/\">Home</NavLink>\n  \n        <NavLink to=\"/posts/\">Posts</NavLink>\n        <NavLink to=\"/account/\">Account</NavLink>\n        {user ? <><NavLink to=\"/profile/\">Profile</NavLink></>:null}\n        {user ? <>Logged in as {user}<span onClick={()=>{setToken(\"\");setUser(\"\");}}>Logout</span></>:null}\n    </h2>\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Home=(props)=>\n{\n    return <>\n        <h1>Welcome to Strangers Things.</h1>\n        {props.user ? <h1>{props.user}</h1>:null}\n    </>;\n}\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Message from './Message';\nimport Post from './Post';\n\nconst Profile = (props)=>\n{\n    const token=props.token;\n\n    const [myMessages,setMyMessages]=useState([]);\n    const [myPosts,setMyPosts]=useState([]);\n    useEffect(()=>\n    {\n        if(token)\n        {\n            Promise.all([APIFetch(\n            {\n                url:\"users/me/\",\n                token:token\n            })])\n            .then(([response])=>\n            {\n                setMyMessages(response.data.messages);\n                setMyPosts(response.data.posts)\n            })\n        }\n        else\n        {\n            setMyMessages([]);\n            setMyPosts([]);\n        }\n    },[token]);\n\n\n    return <>\n    <h1>My Messages:</h1>\n    {myMessages.map((myMessage,idx)=>\n    {\n        return <>\n        <h2 key={idx}>Post:{myMessage.post.title}</h2>\n        <Message key={myMessage._id} message={myMessage} />\n        </>;\n    })}\n    <h1>My Posts:</h1>\n    {myPosts.map((myPost)=>\n    {\n        return myPost.active ?<Post key={myPost._id} post={myPost} />:null;\n    })}\n    </>\n}\n\nexport default Profile;","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\n\nconst C404=()=>\n{\n    const params=useParams();\n    const url=params[0];\n    return <h1>404 Error: Page for {url} does not exist.</h1>\n}\n\nexport default C404;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Posts from './Posts';\nimport Account from './Account';\nimport NavBar from './NavBar';\nimport Home from './Home';\nimport Profile from './Profile';\nimport C404 from './404';\nimport './style.css';\n\n\nconst App = () => \n{\n\n    const [token,setToken]=useState(\"\");\n    const [user,setUser]=useState(\"\");\n\n    return  <BrowserRouter>\n        <NavBar user={user} setToken={setToken} setUser={setUser}></NavBar>\n        <Switch>\n            <Route exact path=\"/\">\n                <Home user={user}></Home>\n            </Route>\n            <Route exact path=\"/profile/\">\n                <Profile token={token}></Profile>\n            </Route>\n            <Route exact path=\"/posts/\">\n                <Posts token={token} user={user}></Posts>\n            </Route>\n            <Route exact path={[\"/account/*/\",\"/account/\"]}>\n                <Account setToken={setToken} setUser={setUser}></Account>\n            </Route>\n            <Route path=\"/*\">\n                <C404></C404>\n            </Route>\n        </Switch>\n    </BrowserRouter>\n    \n}\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"],"sourceRoot":""}
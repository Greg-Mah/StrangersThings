{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const post = props.post;\n  const token = props.token;\n  const fetchPosts = props.fetchPosts;\n  const [showMessages, setShowMessages] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n\n  const postAPI = (type, bodyInput) => {\n    console.log(post);\n    Promise.all([APIFetch({\n      url: \"post/\" + post._id + (bodyInput ? \"/messages/\" : \"/\"),\n      method: type,\n      token: token,\n      ...(bodyInput && {\n        body: bodyInput\n      })\n    })]).then(([response]) => {\n      console.log(response);\n      fetchPosts();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [post.title ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }, this) : null, post.author.username ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Seller: \", post.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }, this) : null, post.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this) : null, post.price ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", post.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this) : null, post.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", post.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Will Deliver: \", post.willDeliver + post.willDeliver ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), post.createdAt ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", post.createdAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this) : null, post.updatedAt ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last updated: \", post.updatedAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }, this) : null, post.messages.length !== 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Messages: \", post.messages.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }, this) : null, post.isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowEdit(!showEdit);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), showEdit ? /*#__PURE__*/_jsxDEV(PostForm, {\n        token: token,\n        fetchPosts: fetchPosts,\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          postAPI(\"DELETE\");\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowMessages(!showMessages);\n        },\n        children: \"Show Post Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : null, showMessages ? post.messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message\n      }, message._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    }) : null, !post.isAuthor && token ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 34\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Post, \"EaPyy5sz0pPLnf3IwphFD+OX11s=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Post.js"],"names":["React","useState","APIFetch","PostForm","Post","props","post","token","fetchPosts","showMessages","setShowMessages","showEdit","setShowEdit","postAPI","type","bodyInput","console","log","Promise","all","url","_id","method","body","then","response","title","author","username","description","price","location","willDeliver","createdAt","updatedAt","messages","length","isAuthor","map","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\n\n\n\n\nconst Post=(props)=>\n{\n    const post=props.post;\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n\n    const [showMessages,setShowMessages]=useState(false);\n    const [showEdit,setShowEdit]=useState(false)\n\n\n    const postAPI=(type,bodyInput)=>\n    {\n        console.log(post);\n        Promise.all([APIFetch({\n            url:\"post/\"+post._id+(bodyInput ? \"/messages/\":\"/\"),\n            method:type,\n            token:token,\n            ...(bodyInput && {body:bodyInput})\n        })])\n        .then(([response])=>\n        {\n            console.log(response);\n            fetchPosts();\n        })\n        ;\n\n        \n    }\n\n    return <>\n        {(post.title ? <h2>{post.title}</h2> : null)}\n        {(post.author.username ? <p>Seller: {post.author.username}</p> : null)}\n        {(post.description ? <p>{post.description}</p> : null)}\n        {(post.price ? <p>Price: {post.price}</p> : null)}\n        {(post.location ? <p>Location: {post.location}</p> : null)}\n        <p>Will Deliver: {post.willDeliver + post.willDeliver ? \"Yes\":\"No\"}</p>\n        {(post.createdAt ? <p>Created: {post.createdAt}</p> : null)}\n        {(post.updatedAt ? <p>Last updated: {post.updatedAt}</p> : null)}\n        {(post.messages.length!==0 ? <p>Messages: {post.messages.length}</p> : null)}\n        {post.isAuthor ? <>\n\n        <button onClick={()=>\n        {\n            setShowEdit(!showEdit);\n        }}>Edit</button>\n        {showEdit ? <PostForm token={token} fetchPosts={fetchPosts} post={post}/>:null}        \n        <button onClick={()=>\n        {\n            postAPI(\"DELETE\");\n        }}>Delete</button>\n        <button onClick={()=>\n        {\n            setShowMessages(!showMessages);\n        }}>Show Post Messages</button>\n        </>:null}\n        {(showMessages ? post.messages.map((message)=>\n        {\n            return <Message key={message._id} message={message}/>;\n        })\n        : null)}\n        {!post.isAuthor&&token ? <button>Message</button>:null}\n\n    </>;\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}
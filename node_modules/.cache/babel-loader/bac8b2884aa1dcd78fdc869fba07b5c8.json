{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Message from './Message';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const token = props.token;\n  const [myMessages, setMyMessages] = useState([]);\n  const [myPosts, setMyPosts] = useState([]);\n  useEffect(() => {\n    if (token) {\n      Promise.all([APIFetch({\n        url: \"users/me/\",\n        token: token\n      })]).then(([response]) => {\n        console.log(response);\n        setMyMessages(response.data.messages);\n        setMyPosts(response.data.posts);\n      });\n    } else {\n      setMyMessages([]);\n      setMyPosts([]);\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [myMessages.map(myMessage => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: myMessage\n      }, myMessage._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    }), myPosts.map(myPost => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: myPost\n      }, myPost._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Home, \"phkcRSnQ6GjdbPy4Oa3bD0iOTzg=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Home.js"],"names":["React","useEffect","useState","APIFetch","Message","Post","Home","props","token","myMessages","setMyMessages","myPosts","setMyPosts","Promise","all","url","then","response","console","log","data","messages","posts","map","myMessage","_id","myPost"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AAEA,MAAMC,IAAI,GAAEC,KAAD,IACX;AAAA;;AACI,QAAMC,KAAK,GAACD,KAAK,CAACC,KAAlB;AAEA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,MACV;AACI,QAAGO,KAAH,EACA;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACX,QAAQ,CACrB;AACIY,QAAAA,GAAG,EAAC,WADR;AAEIP,QAAAA,KAAK,EAACA;AAFV,OADqB,CAAT,CAAZ,EAKCQ,IALD,CAKM,CAAC,CAACC,QAAD,CAAD,KACN;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,QAAAA,aAAa,CAACO,QAAQ,CAACG,IAAT,CAAcC,QAAf,CAAb;AACAT,QAAAA,UAAU,CAACK,QAAQ,CAACG,IAAT,CAAcE,KAAf,CAAV;AACH,OAVD;AAWH,KAbD,MAeA;AACIZ,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GArBQ,EAqBP,CAACJ,KAAD,CArBO,CAAT;AAuBA,sBAAO;AAAA,eACNC,UAAU,CAACc,GAAX,CAAgBC,SAAD,IAChB;AACI,0BAAO,QAAC,OAAD;AAA6B,QAAA,OAAO,EAAEA;AAAtC,SAAcA,SAAS,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHA,CADM,EAKNd,OAAO,CAACY,GAAR,CAAaG,MAAD,IACb;AACI,0BAAO,QAAC,IAAD;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SAAWA,MAAM,CAACD,GAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHA,CALM;AAAA,kBAAP;AAUH,CAvCD;;GAAMnB,I;;KAAAA,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Message from './Message';\nimport Post from './Post';\n\nconst Home=(props)=>\n{\n    const token=props.token;\n\n    const [myMessages,setMyMessages]=useState([]);\n    const [myPosts,setMyPosts]=useState([]);\n    useEffect(()=>\n    {\n        if(token)\n        {\n            Promise.all([APIFetch(\n            {\n                url:\"users/me/\",\n                token:token\n            })])\n            .then(([response])=>\n            {\n                console.log(response);\n                setMyMessages(response.data.messages);\n                setMyPosts(response.data.posts)\n            })\n        }\n        else\n        {\n            setMyMessages([]);\n            setMyPosts([]);\n        }\n    },[token]);\n\n    return <>\n    {myMessages.map((myMessage)=>\n    {\n        return <Message key={myMessage._id} message={myMessage} />;\n    })}\n    {myPosts.map((myPost)=>\n    {\n        return <Post key={myPost._id} post={myPost} />;\n    })}\n    </>\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}
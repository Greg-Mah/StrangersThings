{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const post = props.post;\n  const token = props.token;\n  const [focus, setFocus] = useState();\n\n  const postAPI = (type, bodyInput, message) => {\n    APIFetch({\n      url: \"post/\" + post._id + (message ? \"messages\" : \"\"),\n      method: type,\n      token: token,\n      ...(bodyInput && {\n        body: bodyInput\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [post.title ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this) : null, post.author.username ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Seller: \", post.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 34\n    }, this) : null, post.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this) : null, post.price ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", post.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this) : null, post.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", post.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Will Deliver: \", post.willDeliver + post.willDeliver ? \"Yes\" : \"No\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), post.createdAt ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Created: \", post.createdAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 28\n    }, this) : null, post.updatedAt ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last updated: \", post.updatedAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 28\n    }, this) : null, post.messages.length !== 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Messages: \", post.messages.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 38\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFocus(!focus);\n      },\n      children: \"Show Post Actions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), focus ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [post.isAuthor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this), post.messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          message: message\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(Post, \"UJL1i0hg362HMZ3Ied2lEEiFdHk=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Post.js"],"names":["React","useState","APIFetch","Post","props","post","token","focus","setFocus","postAPI","type","bodyInput","message","url","_id","method","body","title","author","username","description","price","location","willDeliver","createdAt","updatedAt","messages","length","isAuthor","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\n\n\nconst Post=(props)=>\n{\n    const post=props.post;\n    const token=props.token;\n\n    const [focus,setFocus]=useState();\n\n    const postAPI=(type,bodyInput,message)=>\n    {\n        APIFetch({\n            url:\"post/\"+post._id+(message ? \"messages\":\"\"),\n            method:type,\n            token:token,\n            ...(bodyInput && {body:bodyInput})\n        }\n        )\n    }\n\n    return <>\n        {(post.title ? <h2>{post.title}</h2> : null)}\n        {(post.author.username ? <p>Seller: {post.author.username}</p> : null)}\n        {(post.description ? <p>{post.description}</p> : null)}\n        {(post.price ? <p>Price: {post.price}</p> : null)}\n        {(post.location ? <p>Location: {post.location}</p> : null)}\n        <p>Will Deliver: {post.willDeliver + post.willDeliver ? \"Yes\":\"No\"}</p>\n        {(post.createdAt ? <p>Created: {post.createdAt}</p> : null)}\n        {(post.updatedAt ? <p>Last updated: {post.updatedAt}</p> : null)}\n        {(post.messages.length!==0 ? <p>Messages: {post.messages.length}</p> : null)}\n        <button onClick={()=>\n        {\n            setFocus(!focus);\n        }}>Show Post Actions</button>\n        <br/>\n        {(focus ? <>\n            {post.isAuthor ? <>\n                <button>Delete</button>\n                <button>Edit</button>\n            </>:null}\n            {<button>Message</button>}\n            {post.messages.map((message)=>\n            {\n                return <Message key={message._id} message={message}/>;\n            })}\n        </>: null)}\n    </>;\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}
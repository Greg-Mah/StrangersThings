{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = props => {\n  _s();\n\n  const token = props.token;\n  const fetchPosts = props.fetchPosts;\n  const setShowCreatePost = props.setShowCreatePost;\n  const post = props.post;\n  const [title, setTitle] = useState(post ? post.title : \"\");\n  const [description, setDescription] = useState(post ? post.description : \"\");\n  const [price, setPrice] = useState(post ? post.price : \"\");\n  const [location, setLocation] = useState(post ? post.location : \"\");\n  const [willDeliver, setWillDeliver] = useState(post ? post.willDeliver : false);\n  const [message, setMessage] = useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (location === \"\") {\n        location = \"[On Request]\";\n      }\n\n      APIFetch({\n        url: \"posts/\" + (post ? post_id : \"\"),\n        method: post ? \"PATCH\" : \"POST\",\n        token: token,\n        body: {\n          post: {\n            title: title,\n            description: description,\n            price: price,\n            location: location,\n            willDeliver: willDeliver\n          }\n        }\n      }).then(response => {\n        if (response.success) {\n          setMessage(response.data.message);\n          fetchPosts();\n\n          if (!post) {\n            setShowCreatePost();\n          }\n        } else {\n          setMessage(response.error.message);\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Form:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: event => {\n        setTitle(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: event => {\n        setDescription(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Price\",\n      value: price,\n      onChange: event => {\n        setPrice(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: location,\n      onChange: event => {\n        setLocation(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: willDeliver,\n      onChange: () => {\n        setWillDeliver(!willDeliver);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Will Deliver.\",\n      children: \"Will Deliver.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !title || !description || !price,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PostForm, \"w9/RCTYFF18gP2QzyDocb5tCSIg=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/PostForm.js"],"names":["React","useState","APIFetch","PostForm","props","token","fetchPosts","setShowCreatePost","post","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","message","setMessage","event","preventDefault","url","post_id","method","body","then","response","success","data","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst PostForm =(props)=>\n{\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n    const setShowCreatePost=props.setShowCreatePost;\n    const post=props.post;\n\n    const [title,setTitle]=useState(post ? post.title:\"\");\n    const [description,setDescription]=useState(post ? post.description:\"\");\n    const [price,setPrice]=useState(post ? post.price:\"\");\n    const [location,setLocation]=useState(post ? post.location:\"\");\n    const [willDeliver,setWillDeliver]=useState(post ? post.willDeliver:false);\n    const [message,setMessage]=useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n    \n\n    return <form onSubmit={(event)=>\n    {\n        event.preventDefault();\n        if(location===\"\")\n        {\n            location=\"[On Request]\";\n        }\n        APIFetch(\n            {\n                url:\"posts/\"+(post ? post_id:\"\"),\n                method:post ? \"PATCH\":\"POST\",\n                token:token,\n                body:\n                {\n                    post:\n                    {\n                        title:title,\n                        description:description,\n                        price:price,\n                        location:location,\n                        willDeliver:willDeliver\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            if(response.success)\n            {\n                setMessage(response.data.message);\n                fetchPosts();\n                if(!post)\n                {\n                    setShowCreatePost();\n                }\n            }\n            else\n            {\n                setMessage(response.error.message)\n            }\n        })\n        \n    }}>\n        <h2>Post Form:</h2>\n        <input required type=\"text\" placeholder=\"Title\" value={title} onChange={(event)=>\n        {\n            setTitle(event.target.value);\n        }}/><br />\n        <input required type=\"text\" placeholder=\"Description\" value={description} onChange={(event)=>\n        {\n            setDescription(event.target.value);\n        }}/><br />\n        <input required type=\"text\" placeholder=\"Price\" value={price} onChange={(event)=>\n        {\n            setPrice(event.target.value);\n        }}/><br />\n        <input type=\"text\" placeholder=\"Location\" value={location} onChange={(event)=>\n        {\n            setLocation(event.target.value);\n        }}/><br />\n        <input type=\"checkbox\" checked={willDeliver}  onChange={()=>\n        {\n            setWillDeliver(!willDeliver);\n        }}/>\n        <label htmlFor=\"Will Deliver.\">Will Deliver.</label>\n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!title||!description||!price}>Submit</button>\n    </form>\n}\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
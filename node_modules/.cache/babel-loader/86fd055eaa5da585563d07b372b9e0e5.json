{"ast":null,"code":"import _slicedToArray from\"/home/grem15/Code/StrangersThings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import APIFetch from'./api';import PostForm from'./PostForm';import Post from'./Post';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Posts=function Posts(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState(posts),_useState6=_slicedToArray(_useState5,2),matchPosts=_useState6[0],setMatchPosts=_useState6[1];var token=props.token;var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showCreatePost=_useState8[0],setShowCreatePost=_useState8[1];var fetchPosts=function fetchPosts(){Promise.all([APIFetch({url:\"posts/\",token:token})]).then(function(_ref){var _ref2=_slicedToArray(_ref,1),response=_ref2[0];setPosts(response.data.posts);});};useEffect(function(){fetchPosts();},[]);useEffect(function(){setMatchPosts(posts.filter(function(post){return post.title.includes(search)||post.description.includes(search)||post.author.username.includes(search)||post.price.includes(search)||post.location.includes(search);}));},[search,posts]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search Posts\",value:search,onChange:function onChange(event){setSearch(event.target.value);}}),token?/*#__PURE__*/_jsx(\"h2\",{onClick:function onClick(){setShowCreatePost(!showCreatePost);},children:\"Show/Hide Post form\"}):null,showCreatePost?/*#__PURE__*/_jsx(PostForm,{token:token,fetchPosts:fetchPosts,setShowCreatePost:setShowCreatePost}):null,/*#__PURE__*/_jsx(\"div\",{children:matchPosts.map(function(post){return/*#__PURE__*/_jsx(Post,{post:post,fetchPosts:fetchPosts,token:token},post._id);})})]});};export default Posts;","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Posts.js"],"names":["React","useEffect","useState","APIFetch","PostForm","Post","Posts","props","posts","setPosts","search","setSearch","matchPosts","setMatchPosts","token","showCreatePost","setShowCreatePost","fetchPosts","Promise","all","url","then","response","data","filter","post","title","includes","description","author","username","price","location","event","target","value","map","_id"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,OAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAGA,GAAMC,CAAAA,KAAK,CAAC,QAANA,CAAAA,KAAM,CAACC,KAAD,CACZ,CACI,cAAuBL,QAAQ,CAAC,EAAD,CAA/B,wCAAOM,KAAP,eAAaC,QAAb,eACA,eAAyBP,QAAQ,CAAC,EAAD,CAAjC,yCAAOQ,MAAP,eAAcC,SAAd,eACA,eAAiCT,QAAQ,CAACM,KAAD,CAAzC,yCAAOI,UAAP,eAAkBC,aAAlB,eACA,GAAMC,CAAAA,KAAK,CAACP,KAAK,CAACO,KAAlB,CACA,eAA0CZ,QAAQ,CAAC,KAAD,CAAlD,yCAAOa,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,EACjB,CACIC,OAAO,CAACC,GAAR,CAAY,CAAChB,QAAQ,CACrB,CACIiB,GAAG,CAAC,QADR,CAEIN,KAAK,CAACA,KAFV,CADqB,CAAT,CAAZ,EAMCO,IAND,CAMM,cACN,kCADQC,QACR,UACIb,QAAQ,CAACa,QAAQ,CAACC,IAAT,CAAcf,KAAf,CAAR,CACH,CATD,EAUH,CAZD,CAcAP,SAAS,CAAC,UACV,CACIgB,UAAU,GACb,CAHQ,CAGP,EAHO,CAAT,CAKAhB,SAAS,CAAC,UACV,CACIY,aAAa,CAACL,KAAK,CAACgB,MAAN,CAAa,SAACC,IAAD,CAC3B,CACI,MAAOA,CAAAA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBjB,MAApB,GACPe,IAAI,CAACG,WAAL,CAAiBD,QAAjB,CAA0BjB,MAA1B,CADO,EAEPe,IAAI,CAACI,MAAL,CAAYC,QAAZ,CAAqBH,QAArB,CAA8BjB,MAA9B,CAFO,EAGPe,IAAI,CAACM,KAAL,CAAWJ,QAAX,CAAoBjB,MAApB,CAHO,EAIPe,IAAI,CAACO,QAAL,CAAcL,QAAd,CAAuBjB,MAAvB,CAJA,CAKH,CAPa,CAAD,CAAb,CAQH,CAVQ,CAUP,CAACA,MAAD,CAAQF,KAAR,CAVO,CAAT,CAYA,mBAAO,wCACP,cAAQ,IAAI,CAAC,MAAb,CAAoB,WAAW,CAAC,cAAhC,CAA+C,KAAK,CAAEE,MAAtD,CAA8D,QAAQ,CAAE,kBAACuB,KAAD,CACxE,CACItB,SAAS,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,CACH,CAHD,EADO,CAKNrB,KAAK,cAAG,WAAI,OAAO,CAAE,kBAAI,CAACE,iBAAiB,CAAC,CAACD,cAAF,CAAjB,CAAmC,CAArD,iCAAH,CAAqF,IALpF,CAMNA,cAAc,cAAG,KAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,CAAwB,UAAU,CAAEG,UAApC,CAAgD,iBAAiB,CAAED,iBAAnE,EAAH,CAA2F,IANnG,cAOP,qBACKJ,UAAU,CAACwB,GAAX,CAAe,SAACX,IAAD,CAChB,CACI,mBAAO,KAAC,IAAD,EAAqB,IAAI,CAAEA,IAA3B,CAAiC,UAAU,CAAER,UAA7C,CAAyD,KAAK,CAAEH,KAAhE,EAAWW,IAAI,CAACY,GAAhB,CAAP,CACH,CAHA,CADL,EAPO,GAAP,CAcH,CArDD,CAuDA,cAAe/B,CAAAA,KAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\nimport Post from './Post';\n\n\nconst Posts=(props)=>\n{\n    const [posts,setPosts]=useState([]);\n    const [search,setSearch]=useState(\"\");\n    const [matchPosts,setMatchPosts]=useState(posts);   \n    const token=props.token;\n    const [showCreatePost, setShowCreatePost]=useState(false);\n\n    const fetchPosts=()=>\n    {\n        Promise.all([APIFetch(\n        {\n            url:\"posts/\",\n            token:token\n        }\n        )])\n        .then(([response])=>\n        {\n            setPosts(response.data.posts);\n        });\n    }\n\n    useEffect(()=>\n    {\n        fetchPosts();\n    },[]);\n\n    useEffect(()=>\n    {\n        setMatchPosts(posts.filter((post)=>\n        {\n            return post.title.includes(search)||\n            post.description.includes(search)||\n            post.author.username.includes(search)||\n            post.price.includes(search)||\n            post.location.includes(search);\n        }));\n    },[search,posts]);\n\n    return <>\n    <input  type=\"text\" placeholder=\"Search Posts\" value={search} onChange={(event)=>\n    {\n        setSearch(event.target.value);\n    }}/>\n    {token ? <h2 onClick={()=>{setShowCreatePost(!showCreatePost)}}>Show/Hide Post form</h2> : null}\n    {showCreatePost ? <PostForm token={token} fetchPosts={fetchPosts} setShowCreatePost={setShowCreatePost}/>:null}\n    <div>\n        {matchPosts.map((post)=>\n        {\n            return <Post key={post._id} post={post} fetchPosts={fetchPosts} token={token}/>\n        })}\n    </div>\n    </>;\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}
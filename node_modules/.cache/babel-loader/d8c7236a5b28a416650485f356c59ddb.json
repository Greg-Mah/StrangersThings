{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/NewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPostForm = props => {\n  _s();\n\n  const token = props.token;\n  const fetchPosts = props.fetchPosts;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  const [message, setMessage] = useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (location === \"\") {\n        location = \"[On Request]\";\n      }\n\n      APIFetch({\n        url: \"posts/\",\n        method: \"POST\",\n        token: token,\n        body: {\n          post: {\n            title: title,\n            description: description,\n            price: price,\n            location: location,\n            willDeliver: willDeliver\n          }\n        }\n      }).then(response => {\n        if (response.success) {\n          setMessage(response.data.message);\n          fetchPosts();\n        } else {\n          setMessage(response.error.message);\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Post Form:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: event => {\n        setTitle(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: event => {\n        setDescription(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Price\",\n      value: price,\n      onChange: event => {\n        setPrice(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Location\",\n      value: location,\n      onChange: event => {\n        setLocation(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: willDeliver,\n      onChange: () => {\n        setWillDeliver(!willDeliver);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Will Deliver.\",\n      children: \"Will Deliver.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !title || !description || !price,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NewPostForm, \"jCkrWCNo4agXwJbTcUcG4mAuAx8=\");\n\n_c = NewPostForm;\nexport default NewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/NewPostForm.js"],"names":["React","useState","APIFetch","NewPostForm","props","token","fetchPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","message","setMessage","event","preventDefault","url","method","body","post","then","response","success","data","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst NewPostForm =(props)=>\n{\n    const token=props.token;\n    const fetchPosts=props.fetchPosts;\n\n    const [title,setTitle]=useState(\"\");\n    const [description,setDescription]=useState(\"\");\n    const [price,setPrice]=useState(\"\");\n    const [location,setLocation]=useState(\"\");\n    const [willDeliver,setWillDeliver]=useState(false);\n    const [message,setMessage]=useState(\"Fill out the form. Title, Description, and Price are required. Location will default to [On Request] if left empty.\");\n    \n\n\n    return <form onSubmit={(event)=>\n    {\n        event.preventDefault();\n        if(location===\"\")\n        {\n            location=\"[On Request]\";\n        }\n        APIFetch(\n            {\n                url:\"posts/\",\n                method:\"POST\",\n                token:token,\n                body:\n                {\n                    post:\n                    {\n                        title:title,\n                        description:description,\n                        price:price,\n                        location:location,\n                        willDeliver:willDeliver\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            if(response.success)\n            {\n                setMessage(response.data.message);\n                fetchPosts();\n            }\n            else\n            {\n                setMessage(response.error.message)\n            }\n        })\n        \n    }}>\n        <h2>New Post Form:</h2>\n        <input required type=\"text\" placeholder=\"Title\" value={title} onChange={(event)=>\n        {\n            setTitle(event.target.value);\n        }}/>\n        <input required type=\"text\" placeholder=\"Description\" value={description} onChange={(event)=>\n        {\n            setDescription(event.target.value);\n        }}/>\n        <input required type=\"text\" placeholder=\"Price\" value={price} onChange={(event)=>\n        {\n            setPrice(event.target.value);\n        }}/>\n        <input type=\"text\" placeholder=\"Location\" value={location} onChange={(event)=>\n        {\n            setLocation(event.target.value);\n        }}/>\n        <input type=\"checkbox\" checked={willDeliver}  onChange={()=>\n        {\n            setWillDeliver(!willDeliver);\n        }}/>\n        <label htmlFor=\"Will Deliver.\">Will Deliver.</label>\n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!title||!description||!price}>Submit</button>\n    </form>\n}\n\nexport default NewPostForm;"]},"metadata":{},"sourceType":"module"}
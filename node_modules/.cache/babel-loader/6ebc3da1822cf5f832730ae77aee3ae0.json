{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch } from 'react-router-dom';\nimport Posts from './Posts';\nimport Account from './Account';\nimport { fetchPosts } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    Promise.all([fetchPosts()]).then(([postsData]) => {\n      setPosts(postsData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts,\n      setPosts: setPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/account/:type\",\n        children: [/*#__PURE__*/_jsxDEV(Account, {\n          setToken: setToken,\n          setUser: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 42\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"R2Jux/Twil2/oEbj1un+5eXHOFk=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this), document.getElementById('app'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/index.js"],"names":["React","useEffect","useState","ReactDOM","Route","Switch","Posts","Account","fetchPosts","App","posts","setPosts","token","setToken","user","setUser","Promise","all","then","postsData","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAGA,MAAMC,GAAG,GAAG,MACZ;AAAA;;AACI,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACY,IAAD,EAAMC,OAAN,IAAeb,QAAQ,CAAC,EAAD,CAA7B;AACAD,EAAAA,SAAS,CAAC,MACV;AACIe,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACT,UAAU,EAAX,CAAZ,EACCU,IADD,CACM,CAAC,CAACC,SAAD,CAAD,KACN;AACIR,MAAAA,QAAQ,CAACQ,SAAD,CAAR;AACH,KAJD;AAKH,GAPQ,EAOP,EAPO,CAAT;AAQA,sBAAO;AAAA,4BACH,QAAC,KAAD;AAAO,MAAA,KAAK,EAAET,KAAd;AAAqB,MAAA,QAAQ,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,MAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAAA,gCAA6B,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEE,QAAnB;AAA6B,UAAA,OAAO,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CApBD;;GAAMN,G;;KAAAA,G;AAyBNN,QAAQ,CAACiB,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAFF","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, Switch} from 'react-router-dom'\nimport Posts from './Posts';\nimport Account from './Account';\nimport { fetchPosts } from './api';\n\n\nconst App = () => \n{\n    const [posts,setPosts]=useState([]);\n    const [token,setToken]=useState(\"\");\n    const [user,setUser]=useState(\"\");\n    useEffect(()=>\n    {\n        Promise.all([fetchPosts()])\n        .then(([postsData])=>\n        {\n            setPosts(postsData);\n        });\n    },[])\n    return <div>\n        <Posts posts={posts} setPosts={setPosts}></Posts>\n        <Switch>\n            <Route path=\"/account/:type\"><Account setToken={setToken} setUser={setUser}></Account> </Route>\n        </Switch>\n        \n    </div>\n}\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app'),\n);"]},"metadata":{},"sourceType":"module"}
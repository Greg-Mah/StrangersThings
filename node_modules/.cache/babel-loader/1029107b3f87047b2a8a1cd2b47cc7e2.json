{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\nimport Post from './Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [matchPosts, setMatchPosts] = useState(posts);\n  const token = props.token;\n  const [showCreatePost, setShowCreatePost] = useState(false);\n\n  const fetchPosts = () => {\n    Promise.all([APIFetch({\n      url: \"posts/\",\n      token: token\n    })]).then(([response]) => {\n      setPosts(response.data.posts);\n    });\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    setMatchPosts(posts.filter(post => {\n      return post.title.includes(search) || post.description.includes(search) || post.author.username.includes(search) || post.price.includes(search) || post.location.includes(search);\n    }));\n  }, [search, posts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Posts\",\n      value: search,\n      onChange: event => {\n        setSearch(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => {\n        setShowCreatePost(!showCreatePost);\n      },\n      children: \"Show/Hide New Post form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this) : null, showCreatePost ? /*#__PURE__*/_jsxDEV(PostForm, {\n      token: token,\n      fetchPosts: fetchPosts,\n      setShowCreatePost: setShowCreatePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this) : null, matchPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        fetchPosts: fetchPosts,\n        token: token\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Posts, \"zopDxPCN2PPXr8zEMG29Jb5n8Y8=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Posts.js"],"names":["React","useEffect","useState","APIFetch","PostForm","Post","Posts","props","posts","setPosts","search","setSearch","matchPosts","setMatchPosts","token","showCreatePost","setShowCreatePost","fetchPosts","Promise","all","url","then","response","data","filter","post","title","includes","description","author","username","price","location","event","target","value","map","_id"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport APIFetch from './api';\nimport PostForm from './PostForm';\nimport Post from './Post';\n\n\nconst Posts=(props)=>\n{\n    const [posts,setPosts]=useState([]);\n    const [search,setSearch]=useState(\"\");\n    const [matchPosts,setMatchPosts]=useState(posts);   \n    const token=props.token;\n    const [showCreatePost, setShowCreatePost]=useState(false);\n\n    const fetchPosts=()=>\n    {\n        Promise.all([APIFetch(\n        {\n            url:\"posts/\",\n            token:token\n        }\n        )])\n        .then(([response])=>\n        {\n            setPosts(response.data.posts);\n        });\n    }\n\n    useEffect(()=>\n    {\n        fetchPosts();\n    },[]);\n\n    useEffect(()=>\n    {\n        setMatchPosts(posts.filter((post)=>\n        {\n            return post.title.includes(search)||\n            post.description.includes(search)||\n            post.author.username.includes(search)||\n            post.price.includes(search)||\n            post.location.includes(search);\n        }));\n    },[search,posts]);\n\n    return <>\n    <input  type=\"text\" placeholder=\"Search Posts\" value={search} onChange={(event)=>\n    {\n        setSearch(event.target.value);\n    }}/>\n    {token ? <h2 onClick={()=>{setShowCreatePost(!showCreatePost)}}>Show/Hide New Post form</h2> : null}\n    {showCreatePost ? <PostForm token={token} fetchPosts={fetchPosts} setShowCreatePost={setShowCreatePost}/>:null}\n    {matchPosts.map((post)=>\n    {\n        return <Post key={post._id} post={post} fetchPosts={fetchPosts} token={token}/>\n    })}\n    </>\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}
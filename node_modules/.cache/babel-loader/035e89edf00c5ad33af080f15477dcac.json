{"ast":null,"code":"var _jsxFileName = \"/home/grem15/Code/StrangersThings/src/UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport APIFetch from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = props => {\n  _s();\n\n  const setToken = props.setToken;\n  const setUser = props.setUser;\n  const type = props.type;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"Enter username and password to \" + type + \".\");\n  const [hidden, setHidden] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      APIFetch({\n        url: \"users/\" + type,\n        method: \"POST\",\n        body: {\n          user: {\n            username: username,\n            password: password\n          }\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.success) {\n          setToken(response.data.token);\n          setMessage(response.data.message);\n          setUser(username);\n        } else {\n          setMessage(response.error.message);\n        }\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: type.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: hidden ? \"password\" : \"text\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: hidden,\n      onChange: () => {\n        setHidden(!hidden);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"Hide Password\",\n      children: \"Hide Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), type === \"register\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: event => {\n        setConfirmPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !username || !password || type === \"register\" && password === confirmPassword,\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserForm, \"b7Amwc6Ddps3c9buXWG2Pw4ByvI=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/UserForm.js"],"names":["React","useState","APIFetch","UserForm","props","setToken","setUser","type","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","hidden","setHidden","event","preventDefault","url","method","body","user","then","response","console","log","success","data","token","error","toUpperCase","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport APIFetch from './api';\n\n\nconst UserForm =(props)=>\n{\n    const setToken=props.setToken;\n    const setUser=props.setUser;\n    const type=props.type;\n\n    \n    const [username,setUsername]=useState(\"\");\n    const [password,setPassword]=useState(\"\");\n    const [confirmPassword,setConfirmPassword]=useState(\"\");\n    const [message,setMessage]=useState(\"Enter username and password to \"+type+\".\");\n    const [hidden,setHidden]=useState(true);\n    \n\n\n    return <form onSubmit={(event)=>\n    {\n        event.preventDefault();\n        APIFetch(\n            {\n                url:\"users/\"+type,\n                method:\"POST\",\n                body:\n                {\n                    user:\n                    {\n                        username:username,\n                        password:password\n                    }\n                }\n            }\n        )\n        .then((response)=>\n        {\n            console.log(response);\n            if(response.success)\n            {\n                setToken(response.data.token);\n                setMessage(response.data.message);\n                setUser(username);\n            }\n            else\n            {\n                setMessage(response.error.message)\n            }\n        })\n        \n    }}>\n        <h2>{type.toUpperCase()}</h2>\n        <input required type=\"text\" placeholder=\"Username\" value={username} onChange={(event)=>\n        {\n            setUsername(event.target.value);\n        }}/>\n        <input required type={hidden ? \"password\": \"text\"} placeholder=\"Password\" value={password} onChange={(event)=>\n        {\n            setPassword(event.target.value);\n        }}/>\n        <input type=\"checkbox\" checked={hidden}  onChange={()=>\n        {\n            setHidden(!hidden);\n        }}/>\n        <label htmlFor=\"Hide Password\">Hide Password</label>\n        {type===\"register\" ?\n        <input required type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(event)=>\n        {\n            setConfirmPassword(event.target.value);\n        }}/>\n        \n        :null}\n        \n        <p>{message}</p>\n\n        <button type=\"submit\" disabled={!username||!password||(type===\"register\"&&password===confirmPassword)}>{type}</button>\n    </form>\n}\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/grem15/Code/StrangersThings/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import APIFetch from'./api';import Message from'./Message';import Post from'./Post';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Profile=function Profile(props){var token=props.token;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myMessages=_useState2[0],setMyMessages=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),myPosts=_useState4[0],setMyPosts=_useState4[1];useEffect(function(){if(token){Promise.all([APIFetch({url:\"users/me/\",token:token})]).then(function(_ref){var _ref2=_slicedToArray(_ref,1),response=_ref2[0];setMyMessages(response.data.messages);setMyPosts(response.data.posts);});}else{setMyMessages([]);setMyPosts([]);}},[token]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Messages:\"}),myMessages.map(function(myMessage,idx){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Post:\",myMessage.post.title]},idx),/*#__PURE__*/_jsx(Message,{message:myMessage},myMessage._id)]});}),/*#__PURE__*/_jsx(\"h1\",{children:\"My Posts:\"}),myPosts.map(function(myPost){return myPost.active?/*#__PURE__*/_jsx(Post,{post:myPost},myPost._id):null;})]});};export default Profile;","map":{"version":3,"sources":["/home/grem15/Code/StrangersThings/src/Profile.js"],"names":["React","useEffect","useState","APIFetch","Message","Post","Profile","props","token","myMessages","setMyMessages","myPosts","setMyPosts","Promise","all","url","then","response","data","messages","posts","map","myMessage","idx","post","title","_id","myPost","active"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,OAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,6IAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAChB,CACI,GAAMC,CAAAA,KAAK,CAACD,KAAK,CAACC,KAAlB,CAEA,cAAiCN,QAAQ,CAAC,EAAD,CAAzC,wCAAOO,UAAP,eAAkBC,aAAlB,eACA,eAA2BR,QAAQ,CAAC,EAAD,CAAnC,yCAAOS,OAAP,eAAeC,UAAf,eACAX,SAAS,CAAC,UACV,CACI,GAAGO,KAAH,CACA,CACIK,OAAO,CAACC,GAAR,CAAY,CAACX,QAAQ,CACrB,CACIY,GAAG,CAAC,WADR,CAEIP,KAAK,CAACA,KAFV,CADqB,CAAT,CAAZ,EAKCQ,IALD,CAKM,cACN,kCADQC,QACR,UACIP,aAAa,CAACO,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAb,CACAP,UAAU,CAACK,QAAQ,CAACC,IAAT,CAAcE,KAAf,CAAV,CACH,CATD,EAUH,CAZD,IAcA,CACIV,aAAa,CAAC,EAAD,CAAb,CACAE,UAAU,CAAC,EAAD,CAAV,CACH,CACJ,CApBQ,CAoBP,CAACJ,KAAD,CApBO,CAAT,CAuBA,mBAAO,wCACP,oCADO,CAENC,UAAU,CAACY,GAAX,CAAe,SAACC,SAAD,CAAWC,GAAX,CAChB,CACI,mBAAO,wCACP,8BAAoBD,SAAS,CAACE,IAAV,CAAeC,KAAnC,GAASF,GAAT,CADO,cAEP,KAAC,OAAD,EAA6B,OAAO,CAAED,SAAtC,EAAcA,SAAS,CAACI,GAAxB,CAFO,GAAP,CAIH,CANA,CAFM,cASP,iCATO,CAUNf,OAAO,CAACU,GAAR,CAAY,SAACM,MAAD,CACb,CACI,MAAOA,CAAAA,MAAM,CAACC,MAAP,cAAe,KAAC,IAAD,EAAuB,IAAI,CAAED,MAA7B,EAAWA,MAAM,CAACD,GAAlB,CAAf,CAAuD,IAA9D,CACH,CAHA,CAVM,GAAP,CAeH,CA5CD,CA8CA,cAAepB,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport APIFetch from './api';\nimport Message from './Message';\nimport Post from './Post';\n\nconst Profile = (props)=>\n{\n    const token=props.token;\n\n    const [myMessages,setMyMessages]=useState([]);\n    const [myPosts,setMyPosts]=useState([]);\n    useEffect(()=>\n    {\n        if(token)\n        {\n            Promise.all([APIFetch(\n            {\n                url:\"users/me/\",\n                token:token\n            })])\n            .then(([response])=>\n            {\n                setMyMessages(response.data.messages);\n                setMyPosts(response.data.posts)\n            })\n        }\n        else\n        {\n            setMyMessages([]);\n            setMyPosts([]);\n        }\n    },[token]);\n\n\n    return <>\n    <h1>My Messages:</h1>\n    {myMessages.map((myMessage,idx)=>\n    {\n        return <>\n        <h2 key={idx}>Post:{myMessage.post.title}</h2>\n        <Message key={myMessage._id} message={myMessage} />\n        </>;\n    })}\n    <h1>My Posts:</h1>\n    {myPosts.map((myPost)=>\n    {\n        return myPost.active ?<Post key={myPost._id} post={myPost} />:null;\n    })}\n    </>\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}